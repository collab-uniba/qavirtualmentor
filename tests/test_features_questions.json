[
	{
		"id":1,
		"in":
		{
			"title": "How to use virtualenv with Python?",
			"body":"<p>I am planning to install a virtual environment for Python in order to keep my Python packages separate. One of the motivations for this is also to have two versions of Python on my machine (Ubuntu 14.04) co-existing. I have the following wonders:</p><ol><li>In what order should Python, PIP and virtualenv be installed? Does it matter at all?</li><li>Once done, how can I keep two python versions separate under virtualenv?</li><li>Assume I am working on separate projects, is it recommended to keep each of the project in a separate folder created by virtualenv or not?</li></ol><p>I would like to know experts opinion in order to do things in the right manner and wisely.</p>",
			"tags":["python","virtualenv"],
			"hour":17,
			"day":5,
			"reputation": 1000
		},
		"out":
		{
			"CodeSnippet":"False",
			"Weekday":"Weekday",
			"GMTHour":"Afternoon",
			"BodyLength":"Long",
			"TitleLength":"Long",
			"NTag":"True",
			"URL":"False",
			"UserReputation":"Established"
		}

	},
	{
		"id":2,
		"in":
		{
			"title": "during docker build, add-apt-repository returns “keyserver receive failed: No name”",
			"body":"<p>I am trying to build a Docker image for building Zoo-Project, following <a href=\"http://www.zoo-project.org/docs/install/debian.html\" rel=\"nofollow noreferrer\">installation guidelines</a>.</p><p>I am behind a company proxy, so I set up environnement to point to it :</p><pre><code>root@myContainer$ env HTTP_PROXY=http://10.xxx.y.zzz:3128 https_proxy=http://10.xxx.y.zzz:3128 http_proxy=http://10.xxx.y.zzz:3128 HTTPS_PROXY=http://10.xxx.y.zzz:3128 </code></pre> <p>Unfortunately, when I try to run the following command from the Dockerfile or from within the container, it keeps failing :</p><pre><code>root@myContainer$ add-apt-repository ppa:ubuntugis/ppa Official stable UbuntuGIS packages.More info: https://launchpad.net/~ubuntugis/+archive/ubuntu/ppa Press [ENTER] to continue or ctrl-c to cancel adding it gpg: keybox '/tmp/tmpl5mo2xz1/pubring.gpg' created gpg: keyserver receive failed: No name </code></pre> <p>I tried the following with no success : </p> <ul> <li>apt-key adv --keyserver keys.gnupg.net --recv-keys 226213AA  : <em>keyserver receive failed: No name</em></li><li>apt-key adv --keyserver.ubuntu.com --recv-keys 226213AA : <em>keyserver receive failed: No name</em></li><li>the same with url replaced by ip address (91.189.90.55, 18.191.65.131) : <em>keyserver receive failed: No keyserver available</em></li></ul><p>My resolv.conf looks like this (from within the container):</p><pre><code>root@myContainer$  more /etc/resolv.conf # Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTENnameserver 8.8.8.8nameserver 8.8.8.4nameserver 10.171.108.2search rennes.mycompany.fr</code></pre><p>Anyone has a tip here?</p>",
			"tags":["docker","proxy","dns","apt"],
	    	"hour":20,
	    	"day":0,
	    	"reputation": 9
		},
		"out":
		{
			"CodeSnippet":"True",
			"Weekday":"Weekend",
			"GMTHour":"Evening",
			"BodyLength":"Long",
			"TitleLength":"Long",
			"NTag":"True",
			"URL":"True",
			"UserReputation":"New"
		}

	},
	{
		"id":3,
		"in":
		{
			"title": "Why does c = ++(a+b) give compilation error?",
			"body":"<div class=\"post-text\" itemprop=\"text\"><p>After researching, I read that the increment operator requires the operand to have a modifiable data object: <a href=\"https://en.wikipedia.org/wiki/Increment_and_decrement_operators\" rel=\"noreferrer\">https://en.wikipedia.org/wiki/Increment_and_decrement_operators</a>.</p><p>From this I guess that it gives compilation error because <code>(a+b)</code> is a temporary integer and so is not modifiable.</p><p>Is this understanding correct? This was my first time trying to research a problem so if there was something I should have looked for please advise.</p></div>",
			"tags":["c","increment"],
	    	"hour":4,
	    	"day":0,
	    	"reputation": 500
		},
		"out":
		{
			"CodeSnippet":"True",
			"Weekday":"Weekend",
			"GMTHour":"Nigth",
			"BodyLength":"Long",
			"TitleLength":"Long",
			"NTag":"True",
			"URL":"True",
			"UserReputation":"Low"
		}

	},
	{
		"id":4,
		"in":
		{
			"title": "Array-syntax vs pointer-syntax and code generation?",
			"body":"<div class=\"post-text\" itemprop=\"text\"><p>In the book, <a href=\"http://shop.oreilly.com/product/0636920028000.do\" rel=\"noreferrer\"><em>\"Understanding and Using C Pointers\"</em> by Richard Reese</a> it says on page 85,</p><blockquote><pre class=\"lang-c prettyprint prettyprinted\" style=\"\"><code><span class=\"typ\">int</span><span class=\"pln\"> </span><span class=\"typ\">vector</span><span class=\"pun\">[</span><span class=\"lit\">5</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"></span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">};</span></code></pre><p>The code generated by <code>vector[i]</code> is different from the code generated by <code>*(vector+i)</code> . The notation <code>vector[i]</code> generates machine code that starts at location vector , <em>moves</em> <code>i</code> positions from this location, and uses its content. The notation <code>*(vector+i)</code> generates machine code that starts at location <code>vector</code> , <em>adds</em> <code>i</code> to the address, and then uses the contents at that address. While the result is the same, the generated machine code is different. This difference is rarely of significance to most programmers.</p></blockquote><p>You can see the <a href=\"https://books.google.com\" rel=\"noreferrer\">excerpt here</a>. What does this passage mean? In what context would any compiler generate different code for those two? Is there a difference between \"move\" from base, and \"add\" to base? I was unable to get this to work on GCC -- generating different machine code.</p> </div>",
			"tags":["c","PHP"],
	    	"hour":8,
	    	"day":0,
	    	"reputation": 500
		},
		"out":
		{
			"CodeSnippet":"True",
			"Weekday":"Weekend",
			"GMTHour":"Morning",
			"BodyLength":"Long",
			"TitleLength":"Long",
			"NTag":"True",
			"URL":"True",
			"UserReputation":"Low"
		}

	}		

]